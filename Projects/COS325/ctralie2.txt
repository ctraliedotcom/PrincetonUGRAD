This started out as a venture to try to model the violin using addSyn.m.  I started out by going into audacity and recording myself playing an open A, and then looking at it in the frequency spectrum and picking out the base frequency and the first six harmonics (including their decibel powers).  But then, I realized that it sounded boring and crappy, so I decided to try something else, but using some of the work I had already done:

I created an m file called "doit2.m" that creates the sound file for me.  Basically what happens, is it uses a set of frequencies and amplitudes as a model (I started with the set that I got from the violin), and an array of offset musical halfsteps from that frequency (so I used a logarithmic scale like last time).  Then, it uses linear interpolation to create the frequency envelope between the notes, so it sounds like it's sliding up and down (the relative amplitudes of the harmonics are held constant).

I used a sampling rate, 8800hz, which is intentionally low to create this cool aliasing effect that we hear.  Basically, as the notes frequency shift up, the harmonics get aliased one by one, and we start to hear them.  I can't really describe the effect, but it sounds almost like trying to tune a radio to get a signal....except the base frequency (around 440hz) is always in tact because it never gets frequency scaled above the Nyquist rate